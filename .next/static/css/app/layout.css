/*!*************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[13].oneOf[10].use[2]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[13].oneOf[10].use[3]!./app/globals.css ***!
  \*************************************************************************************************************************************************************************************************************************************************************/
/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */

@import url("https://fonts.googleapis.com/css2?family=Crimson+Pro:ital,wght@0,200..900;1,200..900&family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap");

@import url("https://fonts.googleapis.com/css2?family=Geist:wght@100..900&display=swap");

@layer properties;

@layer theme, base, components, utilities;

@layer theme {

  :root, :host {

    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";

    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;

    --color-red-100: rgb(255, 226, 226);

    --color-red-200: rgb(255, 202, 202);

    --color-red-700: rgb(191, 0, 15);

    --color-red-900: rgb(130, 24, 26);

    --color-green-100: rgb(220, 252, 231);

    --color-green-200: rgb(185, 248, 207);

    --color-green-400: rgb(5, 223, 114);

    --color-green-500: rgb(0, 198, 90);

    --color-green-600: rgb(0, 164, 71);

    --color-green-700: rgb(0, 129, 58);

    --color-green-800: rgb(1, 102, 48);

    --color-green-900: rgb(13, 84, 43);

    --color-green-950: rgb(3, 46, 21);

    --color-teal-50: rgb(240, 253, 250);

    --color-teal-900: rgb(11, 79, 74);

    --color-teal-950: rgb(2, 47, 46);

    --color-sky-600: rgb(0, 132, 199);

    --color-slate-100: rgb(241, 245, 249);

    --color-slate-300: rgb(202, 213, 226);

    --color-zinc-50: rgb(250, 250, 250);

    --color-zinc-100: rgb(244, 244, 245);

    --color-zinc-200: rgb(228, 228, 231);

    --color-zinc-300: rgb(212, 212, 216);

    --color-zinc-500: rgb(113, 113, 123);

    --color-zinc-600: rgb(82, 82, 92);

    --color-zinc-700: rgb(63, 63, 70);

    --color-zinc-800: rgb(39, 39, 42);

    --color-zinc-900: rgb(24, 24, 27);

    --color-black: #000;

    --color-white: #fff;

    --spacing: 0.25rem;

    --container-xl: 36rem;

    --container-2xl: 42rem;

    --container-4xl: 56rem;

    --text-xs: 0.75rem;

    --text-xs--line-height: calc(1 / 0.75);

    --text-sm: 0.875rem;

    --text-sm--line-height: calc(1.25 / 0.875);

    --text-lg: 1.125rem;

    --text-lg--line-height: calc(1.75 / 1.125);

    --text-xl: 1.25rem;

    --text-xl--line-height: calc(1.75 / 1.25);

    --text-2xl: 1.5rem;

    --text-2xl--line-height: calc(2 / 1.5);

    --text-3xl: 1.875rem;

    --text-3xl--line-height: calc(2.25 / 1.875);

    --text-4xl: 2.25rem;

    --text-4xl--line-height: calc(2.5 / 2.25);

    --font-weight-normal: 400;

    --font-weight-medium: 500;

    --font-weight-semibold: 600;

    --tracking-wide: 0.025em;

    --tracking-widest: 0.1em;

    --default-transition-duration: 150ms;

    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

    --default-font-family: var(--font-sans);

    --default-mono-font-family: var(--font-mono);

    --font-default: Geist, Inter, Arial, Helvetica, sans-serif;

    --font-default-serif: "Crimson Pro", ui-serif, serif;

    --font-dyslexic: OpenDyslexic;

    --font-current: var(--font-default);

    --font-current-serif: var(--font-default-serif);
  }

@supports (color: oklab(0% 0 0%)) {
:root, :host {

      --color-red-100: oklch(93.6% 0.032 17.717);
    }
}

@supports (color: color(display-p3 0 0 0%)) {
:root, :host {

      --color-red-200: color(display-p3 0.96956 0.79815 0.7943);
    }
}

@supports (color: oklab(0% 0 0%)) {
:root, :host {

      --color-red-200: oklch(88.5% 0.062 18.334);
    }
}

@supports (color: color(display-p3 0 0 0%)) {
:root, :host {

      --color-red-700: color(display-p3 0.69274 0.11623 0.10468);
    }
}

@supports (color: oklab(0% 0 0%)) {
:root, :host {

      --color-red-700: oklch(50.5% 0.213 27.518);

      --color-red-900: oklch(39.6% 0.141 25.723);

      --color-green-100: oklch(96.2% 0.044 156.743);

      --color-green-200: oklch(92.5% 0.084 155.995);

      --color-green-400: oklch(79.2% 0.209 151.711);
    }
}

@supports (color: color(display-p3 0 0 0%)) {
:root, :host {

      --color-green-500: color(display-p3 0.30873 0.77475 0.37431);
    }
}

@supports (color: oklab(0% 0 0%)) {
:root, :host {

      --color-green-500: oklch(72.3% 0.219 149.579);
    }
}

@supports (color: color(display-p3 0 0 0%)) {
:root, :host {

      --color-green-600: color(display-p3 0.24388 0.64082 0.29481);
    }
}

@supports (color: oklab(0% 0 0%)) {
:root, :host {

      --color-green-600: oklch(62.7% 0.194 149.214);
    }
}

@supports (color: color(display-p3 0 0 0%)) {
:root, :host {

      --color-green-700: color(display-p3 0.19836 0.5018 0.24533);
    }
}

@supports (color: oklab(0% 0 0%)) {
:root, :host {

      --color-green-700: oklch(52.7% 0.154 150.069);

      --color-green-800: oklch(44.8% 0.119 151.328);

      --color-green-900: oklch(39.3% 0.095 152.535);

      --color-green-950: oklch(26.6% 0.065 152.934);

      --color-teal-50: oklch(98.4% 0.014 180.72);

      --color-teal-900: oklch(38.6% 0.063 188.416);

      --color-teal-950: oklch(27.7% 0.046 192.524);
    }
}

@supports (color: color(display-p3 0 0 0%)) {
:root, :host {

      --color-sky-600: color(display-p3 0.16251 0.50938 0.79608);
    }
}

@supports (color: oklab(0% 0 0%)) {
:root, :host {

      --color-sky-600: oklch(58.8% 0.158 241.966);

      --color-slate-100: oklch(96.8% 0.007 247.896);

      --color-slate-300: oklch(86.9% 0.022 252.894);

      --color-zinc-50: oklch(98.5% 0 0);

      --color-zinc-100: oklch(96.7% 0.001 286.375);

      --color-zinc-200: oklch(92% 0.004 286.32);

      --color-zinc-300: oklch(87.1% 0.006 286.286);

      --color-zinc-500: oklch(55.2% 0.016 285.938);

      --color-zinc-600: oklch(44.2% 0.017 285.786);

      --color-zinc-700: oklch(37% 0.013 285.805);

      --color-zinc-800: oklch(27.4% 0.006 286.033);

      --color-zinc-900: oklch(21% 0.006 285.885);
    }
}
}

@layer base {

  *, ::after, ::before, ::backdrop, ::file-selector-button {

    box-sizing: border-box;

    margin: 0;

    padding: 0;

    border: 0 solid;
  }

  html, :host {

    line-height: 1.5;

    -webkit-text-size-adjust: 100%;

    tab-size: 4;

    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");

    font-feature-settings: var(--default-font-feature-settings, normal);

    font-variation-settings: var(--default-font-variation-settings, normal);

    -webkit-tap-highlight-color: transparent;
  }

  hr {

    height: 0;

    color: inherit;

    border-top-width: 1px;
  }

  abbr:where([title]) {

    -webkit-text-decoration: underline dotted;

    text-decoration: underline dotted;
  }

  h1, h2, h3, h4, h5, h6 {

    font-size: inherit;

    font-weight: inherit;
  }

  a {

    color: inherit;

    -webkit-text-decoration: inherit;

    text-decoration: inherit;
  }

  b, strong {

    font-weight: bolder;
  }

  code, kbd, samp, pre {

    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);

    font-feature-settings: var(--default-mono-font-feature-settings, normal);

    font-variation-settings: var(--default-mono-font-variation-settings, normal);

    font-size: 1em;
  }

  small {

    font-size: 80%;
  }

  sub, sup {

    font-size: 75%;

    line-height: 0;

    position: relative;

    vertical-align: baseline;
  }

  sub {

    bottom: -0.25em;
  }

  sup {

    top: -0.5em;
  }

  table {

    text-indent: 0;

    border-color: inherit;

    border-collapse: collapse;
  }

  :-moz-focusring {

    outline: auto;
  }

  progress {

    vertical-align: baseline;
  }

  summary {

    display: list-item;
  }

  ol, ul, menu {

    list-style: none;
  }

  img, svg, video, canvas, audio, iframe, embed, object {

    display: block;

    vertical-align: middle;
  }

  img, video {

    max-width: 100%;

    height: auto;
  }

  button, input, select, optgroup, textarea, ::file-selector-button {

    font: inherit;

    font-feature-settings: inherit;

    font-variation-settings: inherit;

    letter-spacing: inherit;

    color: inherit;

    border-radius: 0;

    background-color: transparent;

    opacity: 1;
  }

  :where(select:is([multiple], [size])) optgroup {

    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup option {

    padding-inline-start: 20px;
  }

  ::file-selector-button {

    margin-inline-end: 4px;
  }

  ::placeholder {

    opacity: 1;
  }

  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {

    ::placeholder {

      color: currentcolor;

      @supports (color: color-mix(in lab, red, red)) {

        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }

  textarea {

    resize: vertical;
  }

  ::-webkit-search-decoration {

    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {

    min-height: 1lh;

    text-align: inherit;
  }

  ::-webkit-datetime-edit {

    display: inline-flex;
  }

  ::-webkit-datetime-edit-fields-wrapper {

    padding: 0;
  }

  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {

    padding-block: 0;
  }

  :-moz-ui-invalid {

    box-shadow: none;
  }

  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {

    appearance: button;
  }

  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {

    height: auto;
  }

  [hidden]:where(:not([hidden="until-found"])) {

    display: none !important;
  }
}

@layer utilities {

  .pointer-events-none {

    pointer-events: none;
  }

  .invisible {

    visibility: hidden;
  }

  .absolute {

    position: absolute;
  }

  .fixed {

    position: fixed;
  }

  .relative {

    position: relative;
  }

  .sticky {

    position: sticky;
  }

  .inset-0 {

    inset: calc(var(--spacing) * 0);
  }

  .inset-x-0 {

    inset-inline: calc(var(--spacing) * 0);
  }

  .-top-12 {

    top: calc(var(--spacing) * -12);
  }

  .top-0 {

    top: calc(var(--spacing) * 0);
  }

  .top-4 {

    top: calc(var(--spacing) * 4);
  }

  .-right-18 {

    right: calc(var(--spacing) * -18);
  }

  .-right-24 {

    right: calc(var(--spacing) * -24);
  }

  .-left-6 {

    left: calc(var(--spacing) * -6);
  }

  .left-2 {

    left: calc(var(--spacing) * 2);
  }

  .isolate {

    isolation: isolate;
  }

  .z-10 {

    z-index: 10;
  }

  .z-20 {

    z-index: 20;
  }

  .z-30 {

    z-index: 30;
  }

  .z-50 {

    z-index: 50;
  }

  .col-span-2 {

    grid-column: span 2 / span 2;
  }

  .container {

    width: 100%;

    @media (width >= 40rem) {

      max-width: 40rem;
    }

    @media (width >= 48rem) {

      max-width: 48rem;
    }

    @media (width >= 64rem) {

      max-width: 64rem;
    }

    @media (width >= 80rem) {

      max-width: 80rem;
    }

    @media (width >= 96rem) {

      max-width: 96rem;
    }
  }

  .-mx-1 {

    margin-inline: calc(var(--spacing) * -1);
  }

  .-mx-6 {

    margin-inline: calc(var(--spacing) * -6);
  }

  .mx-auto {

    margin-inline: auto;
  }

  .my-1 {

    margin-block: calc(var(--spacing) * 1);
  }

  .my-8 {

    margin-block: calc(var(--spacing) * 8);
  }

  .mt-1 {

    margin-top: calc(var(--spacing) * 1);
  }

  .mt-2 {

    margin-top: calc(var(--spacing) * 2);
  }

  .mt-3 {

    margin-top: calc(var(--spacing) * 3);
  }

  .mt-4 {

    margin-top: calc(var(--spacing) * 4);
  }

  .mt-6 {

    margin-top: calc(var(--spacing) * 6);
  }

  .mt-8 {

    margin-top: calc(var(--spacing) * 8);
  }

  .mt-12 {

    margin-top: calc(var(--spacing) * 12);
  }

  .mt-\[6px\] {

    margin-top: 6px;
  }

  .mr-2 {

    margin-right: calc(var(--spacing) * 2);
  }

  .mb-1 {

    margin-bottom: calc(var(--spacing) * 1);
  }

  .mb-2 {

    margin-bottom: calc(var(--spacing) * 2);
  }

  .mb-4 {

    margin-bottom: calc(var(--spacing) * 4);
  }

  .mb-6 {

    margin-bottom: calc(var(--spacing) * 6);
  }

  .mb-8 {

    margin-bottom: calc(var(--spacing) * 8);
  }

  .mb-12 {

    margin-bottom: calc(var(--spacing) * 12);
  }

  .-ml-1 {

    margin-left: calc(var(--spacing) * -1);
  }

  .ml-1 {

    margin-left: calc(var(--spacing) * 1);
  }

  .ml-2 {

    margin-left: calc(var(--spacing) * 2);
  }

  .ml-4 {

    margin-left: calc(var(--spacing) * 4);
  }

  .ml-8 {

    margin-left: calc(var(--spacing) * 8);
  }

  .ml-auto {

    margin-left: auto;
  }

  .block {

    display: block;
  }

  .flex {

    display: flex;
  }

  .grid {

    display: grid;
  }

  .hidden {

    display: none;
  }

  .inline {

    display: inline;
  }

  .inline-block {

    display: inline-block;
  }

  .inline-flex {

    display: inline-flex;
  }

  .table {

    display: table;
  }

  .aspect-square {

    aspect-ratio: 1 / 1;
  }

  .size-\(--cell-size\) {

    width: var(--cell-size);

    height: var(--cell-size);
  }

  .size-2 {

    width: calc(var(--spacing) * 2);

    height: calc(var(--spacing) * 2);
  }

  .size-3\.5 {

    width: calc(var(--spacing) * 3.5);

    height: calc(var(--spacing) * 3.5);
  }

  .size-4 {

    width: calc(var(--spacing) * 4);

    height: calc(var(--spacing) * 4);
  }

  .size-9 {

    width: calc(var(--spacing) * 9);

    height: calc(var(--spacing) * 9);
  }

  .size-auto {

    width: auto;

    height: auto;
  }

  .h-\(--cell-size\) {

    height: var(--cell-size);
  }

  .h-8 {

    height: calc(var(--spacing) * 8);
  }

  .h-9 {

    height: calc(var(--spacing) * 9);
  }

  .h-10 {

    height: calc(var(--spacing) * 10);
  }

  .h-80 {

    height: calc(var(--spacing) * 80);
  }

  .h-84 {

    height: calc(var(--spacing) * 84);
  }

  .h-96 {

    height: calc(var(--spacing) * 96);
  }

  .h-fit {

    height: fit-content;
  }

  .h-full {

    height: 100%;
  }

  .h-px {

    height: 1px;
  }

  .h-screen {

    height: 100vh;
  }

  .max-h-\(--radix-dropdown-menu-content-available-height\) {

    max-height: var(--radix-dropdown-menu-content-available-height);
  }

  .min-h-64 {

    min-height: calc(var(--spacing) * 64);
  }

  .min-h-96 {

    min-height: calc(var(--spacing) * 96);
  }

  .min-h-\[70dvh\] {

    min-height: 70dvh;
  }

  .min-h-screen {

    min-height: 100vh;
  }

  .w-\(--cell-size\) {

    width: var(--cell-size);
  }

  .w-72 {

    width: calc(var(--spacing) * 72);
  }

  .w-96 {

    width: calc(var(--spacing) * 96);
  }

  .w-auto {

    width: auto;
  }

  .w-fit {

    width: fit-content;
  }

  .w-full {

    width: 100%;
  }

  .w-screen {

    width: 100vw;
  }

  .max-w-2xl {

    max-width: var(--container-2xl);
  }

  .max-w-full {

    max-width: 100%;
  }

  .max-w-xl {

    max-width: var(--container-xl);
  }

  .min-w-\(--cell-size\) {

    min-width: var(--cell-size);
  }

  .min-w-\[8rem\] {

    min-width: 8rem;
  }

  .flex-1 {

    flex: 1;
  }

  .shrink-0 {

    flex-shrink: 0;
  }

  .grow {

    flex-grow: 1;
  }

  .border-collapse {

    border-collapse: collapse;
  }

  .origin-\(--radix-dropdown-menu-content-transform-origin\) {

    transform-origin: var(--radix-dropdown-menu-content-transform-origin);
  }

  .origin-\(--radix-popover-content-transform-origin\) {

    transform-origin: var(--radix-popover-content-transform-origin);
  }

  .translate-y-0\.5 {

    --tw-translate-y: calc(var(--spacing) * 0.5);

    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .transform {

    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }

  .cursor-default {

    cursor: default;
  }

  .cursor-pointer {

    cursor: pointer;
  }

  .resize-none {

    resize: none;
  }

  .list-inside {

    list-style-position: inside;
  }

  .list-\[circle\] {

    list-style-type: circle;
  }

  .list-decimal {

    list-style-type: decimal;
  }

  .list-disc {

    list-style-type: disc;
  }

  .grid-cols-1 {

    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  .grid-cols-2 {

    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .flex-col {

    flex-direction: column;
  }

  .items-center {

    align-items: center;
  }

  .items-start {

    align-items: flex-start;
  }

  .justify-between {

    justify-content: space-between;
  }

  .justify-center {

    justify-content: center;
  }

  .justify-end {

    justify-content: flex-end;
  }

  .justify-start {

    justify-content: flex-start;
  }

  .gap-1 {

    gap: calc(var(--spacing) * 1);
  }

  .gap-1\.5 {

    gap: calc(var(--spacing) * 1.5);
  }

  .gap-2 {

    gap: calc(var(--spacing) * 2);
  }

  .gap-3 {

    gap: calc(var(--spacing) * 3);
  }

  .gap-4 {

    gap: calc(var(--spacing) * 4);
  }

  .gap-6 {

    gap: calc(var(--spacing) * 6);
  }

  .gap-8 {

    gap: calc(var(--spacing) * 8);
  }

  .space-y-2 {

    :where(& > :not(:last-child)) {

      --tw-space-y-reverse: 0;

      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));

      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  .gap-x-2 {

    column-gap: calc(var(--spacing) * 2);
  }

  .gap-x-4 {

    column-gap: calc(var(--spacing) * 4);
  }

  .space-x-1 {

    :where(& > :not(:last-child)) {

      --tw-space-x-reverse: 0;

      margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));

      margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  .space-x-2 {

    :where(& > :not(:last-child)) {

      --tw-space-x-reverse: 0;

      margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));

      margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  .gap-y-2 {

    row-gap: calc(var(--spacing) * 2);
  }

  .gap-y-4 {

    row-gap: calc(var(--spacing) * 4);
  }

  .gap-y-6 {

    row-gap: calc(var(--spacing) * 6);
  }

  .gap-y-8 {

    row-gap: calc(var(--spacing) * 8);
  }

  .gap-y-12 {

    row-gap: calc(var(--spacing) * 12);
  }

  .gap-y-24 {

    row-gap: calc(var(--spacing) * 24);
  }

  .overflow-hidden {

    overflow: hidden;
  }

  .overflow-x-hidden {

    overflow-x: hidden;
  }

  .overflow-y-auto {

    overflow-y: auto;
  }

  .rounded-full {

    border-radius: calc(infinity * 1px);
  }

  .rounded-md {

    border-radius: calc(var(--radius) - 2px);
  }

  .rounded-none {

    border-radius: 0;
  }

  .rounded-sm {

    border-radius: calc(var(--radius) - 4px);
  }

  .rounded-xl {

    border-radius: calc(var(--radius) + 4px);
  }

  .rounded-t-md {

    border-top-left-radius: calc(var(--radius) - 2px);

    border-top-right-radius: calc(var(--radius) - 2px);
  }

  .rounded-l-md {

    border-top-left-radius: calc(var(--radius) - 2px);

    border-bottom-left-radius: calc(var(--radius) - 2px);
  }

  .rounded-r-md {

    border-top-right-radius: calc(var(--radius) - 2px);

    border-bottom-right-radius: calc(var(--radius) - 2px);
  }

  .border {

    border-style: var(--tw-border-style);

    border-width: 1px;
  }

  .border-0 {

    border-style: var(--tw-border-style);

    border-width: 0px;
  }

  .border-2 {

    border-style: var(--tw-border-style);

    border-width: 2px;
  }

  .border-6 {

    border-style: var(--tw-border-style);

    border-width: 6px;
  }

  .border-8 {

    border-style: var(--tw-border-style);

    border-width: 8px;
  }

  .border-b {

    border-bottom-style: var(--tw-border-style);

    border-bottom-width: 1px;
  }

  .border-b-2 {

    border-bottom-style: var(--tw-border-style);

    border-bottom-width: 2px;
  }

  .border-background {

    border-color: var(--background);
  }

  .border-green-200 {

    border-color: var(--color-green-200);
  }

  .border-green-600 {

    border-color: var(--color-green-600);
  }

  .border-green-800 {

    border-color: var(--color-green-800);
  }

  .border-input {

    border-color: var(--input);
  }

  .border-red-200 {

    border-color: var(--color-red-200);
  }

  .border-slate-300 {

    border-color: var(--color-slate-300);
  }

  .border-transparent {

    border-color: transparent;
  }

  .border-zinc-200 {

    border-color: var(--color-zinc-200);
  }

  .border-zinc-300 {

    border-color: var(--color-zinc-300);
  }

  .border-zinc-500 {

    border-color: var(--color-zinc-500);
  }

  .bg-accent {

    background-color: var(--accent);
  }

  .bg-background {

    background-color: var(--background);
  }

  .bg-black\/30 {

    background-color: color-mix(in srgb, #000 30%, transparent);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, var(--color-black) 30%, transparent);
    }
  }

  .bg-black\/50 {

    background-color: color-mix(in srgb, #000 50%, transparent);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }

  .bg-border {

    background-color: var(--border);
  }

  .bg-destructive {

    background-color: var(--destructive);
  }

  .bg-green-100 {

    background-color: var(--color-green-100);
  }

  .bg-green-600 {

    background-color: var(--color-green-600);
  }

  .bg-green-700 {

    background-color: var(--color-green-700);
  }

  .bg-green-900 {

    background-color: var(--color-green-900);
  }

  .bg-green-950 {

    background-color: var(--color-green-950);
  }

  .bg-popover {

    background-color: var(--popover);
  }

  .bg-primary {

    background-color: var(--primary);
  }

  .bg-red-100 {

    background-color: var(--color-red-100);
  }

  .bg-secondary {

    background-color: var(--secondary);
  }

  .bg-slate-100 {

    background-color: var(--color-slate-100);
  }

  .bg-teal-50 {

    background-color: var(--color-teal-50);
  }

  .bg-teal-900 {

    background-color: var(--color-teal-900);
  }

  .bg-white {

    background-color: var(--color-white);
  }

  .bg-zinc-100 {

    background-color: var(--color-zinc-100);
  }

  .bg-\[url\(\/noise\.png\)\] {

    background-image: url(/noise.png);
  }

  .bg-cover {

    background-size: cover;
  }

  .bg-center {

    background-position: center;
  }

  .fill-current {

    fill: currentcolor;
  }

  .object-contain {

    object-fit: contain;
  }

  .object-cover {

    object-fit: cover;
  }

  .object-center {

    object-position: center;
  }

  .object-top {

    object-position: top;
  }

  .p-0 {

    padding: calc(var(--spacing) * 0);
  }

  .p-1 {

    padding: calc(var(--spacing) * 1);
  }

  .p-2 {

    padding: calc(var(--spacing) * 2);
  }

  .p-3 {

    padding: calc(var(--spacing) * 3);
  }

  .p-4 {

    padding: calc(var(--spacing) * 4);
  }

  .px-\(--cell-size\) {

    padding-inline: var(--cell-size);
  }

  .px-0 {

    padding-inline: calc(var(--spacing) * 0);
  }

  .px-2 {

    padding-inline: calc(var(--spacing) * 2);
  }

  .px-3 {

    padding-inline: calc(var(--spacing) * 3);
  }

  .px-4 {

    padding-inline: calc(var(--spacing) * 4);
  }

  .px-6 {

    padding-inline: calc(var(--spacing) * 6);
  }

  .px-8 {

    padding-inline: calc(var(--spacing) * 8);
  }

  .py-1 {

    padding-block: calc(var(--spacing) * 1);
  }

  .py-1\.5 {

    padding-block: calc(var(--spacing) * 1.5);
  }

  .py-2 {

    padding-block: calc(var(--spacing) * 2);
  }

  .py-4 {

    padding-block: calc(var(--spacing) * 4);
  }

  .py-6 {

    padding-block: calc(var(--spacing) * 6);
  }

  .py-8 {

    padding-block: calc(var(--spacing) * 8);
  }

  .py-12 {

    padding-block: calc(var(--spacing) * 12);
  }

  .py-16 {

    padding-block: calc(var(--spacing) * 16);
  }

  .pt-0 {

    padding-top: calc(var(--spacing) * 0);
  }

  .pt-4 {

    padding-top: calc(var(--spacing) * 4);
  }

  .pt-6 {

    padding-top: calc(var(--spacing) * 6);
  }

  .pt-12 {

    padding-top: calc(var(--spacing) * 12);
  }

  .pt-16 {

    padding-top: calc(var(--spacing) * 16);
  }

  .pt-24 {

    padding-top: calc(var(--spacing) * 24);
  }

  .pr-1 {

    padding-right: calc(var(--spacing) * 1);
  }

  .pr-2 {

    padding-right: calc(var(--spacing) * 2);
  }

  .pb-1 {

    padding-bottom: calc(var(--spacing) * 1);
  }

  .pb-2 {

    padding-bottom: calc(var(--spacing) * 2);
  }

  .pb-4 {

    padding-bottom: calc(var(--spacing) * 4);
  }

  .pb-8 {

    padding-bottom: calc(var(--spacing) * 8);
  }

  .pb-12 {

    padding-bottom: calc(var(--spacing) * 12);
  }

  .pb-24 {

    padding-bottom: calc(var(--spacing) * 24);
  }

  .pl-2 {

    padding-left: calc(var(--spacing) * 2);
  }

  .pl-3 {

    padding-left: calc(var(--spacing) * 3);
  }

  .pl-8 {

    padding-left: calc(var(--spacing) * 8);
  }

  .text-center {

    text-align: center;
  }

  .text-left {

    text-align: left;
  }

  .font-current-serif {

    font-family: var(--font-default-serif);
  }

  .text-2xl {

    font-size: var(--text-2xl);

    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }

  .text-3xl {

    font-size: var(--text-3xl);

    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }

  .text-4xl {

    font-size: var(--text-4xl);

    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }

  .text-lg {

    font-size: var(--text-lg);

    line-height: var(--tw-leading, var(--text-lg--line-height));
  }

  .text-sm {

    font-size: var(--text-sm);

    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .text-xl {

    font-size: var(--text-xl);

    line-height: var(--tw-leading, var(--text-xl--line-height));
  }

  .text-xs {

    font-size: var(--text-xs);

    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .text-\[0\.8rem\] {

    font-size: 0.8rem;
  }

  .text-md {

    font-size: 1rem;
  }

  .leading-5 {

    --tw-leading: calc(var(--spacing) * 5);

    line-height: calc(var(--spacing) * 5);
  }

  .leading-14 {

    --tw-leading: calc(var(--spacing) * 14);

    line-height: calc(var(--spacing) * 14);
  }

  .leading-none {

    --tw-leading: 1;

    line-height: 1;
  }

  .font-medium {

    --tw-font-weight: var(--font-weight-medium);

    font-weight: var(--font-weight-medium);
  }

  .font-normal {

    --tw-font-weight: var(--font-weight-normal);

    font-weight: var(--font-weight-normal);
  }

  .font-semibold {

    --tw-font-weight: var(--font-weight-semibold);

    font-weight: var(--font-weight-semibold);
  }

  .tracking-wide {

    --tw-tracking: var(--tracking-wide);

    letter-spacing: var(--tracking-wide);
  }

  .tracking-widest {

    --tw-tracking: var(--tracking-widest);

    letter-spacing: var(--tracking-widest);
  }

  .whitespace-nowrap {

    white-space: nowrap;
  }

  .text-accent-foreground {

    color: var(--accent-foreground);
  }

  .text-green-700 {

    color: var(--color-green-700);
  }

  .text-green-800 {

    color: var(--color-green-800);
  }

  .text-green-900 {

    color: var(--color-green-900);
  }

  .text-muted-foreground {

    color: var(--muted-foreground);
  }

  .text-popover-foreground {

    color: var(--popover-foreground);
  }

  .text-primary {

    color: var(--primary);
  }

  .text-primary-foreground {

    color: var(--primary-foreground);
  }

  .text-red-700 {

    color: var(--color-red-700);
  }

  .text-red-900 {

    color: var(--color-red-900);
  }

  .text-secondary-foreground {

    color: var(--secondary-foreground);
  }

  .text-teal-950 {

    color: var(--color-teal-950);
  }

  .text-white {

    color: var(--color-white);
  }

  .text-zinc-200 {

    color: var(--color-zinc-200);
  }

  .text-zinc-300 {

    color: var(--color-zinc-300);
  }

  .text-zinc-500 {

    color: var(--color-zinc-500);
  }

  .text-zinc-600 {

    color: var(--color-zinc-600);
  }

  .text-zinc-700 {

    color: var(--color-zinc-700);
  }

  .text-zinc-800 {

    color: var(--color-zinc-800);
  }

  .text-zinc-900 {

    color: var(--color-zinc-900);
  }

  .capitalize {

    text-transform: capitalize;
  }

  .underline {

    text-decoration-line: underline;
  }

  .underline-offset-2 {

    text-underline-offset: 2px;
  }

  .underline-offset-4 {

    text-underline-offset: 4px;
  }

  .antialiased {

    -webkit-font-smoothing: antialiased;

    -moz-osx-font-smoothing: grayscale;
  }

  .opacity-0 {

    opacity: 0%;
  }

  .opacity-50 {

    opacity: 50%;
  }

  .bg-blend-color-burn {

    background-blend-mode: color-burn;
  }

  .bg-blend-darken {

    background-blend-mode: darken;
  }

  .bg-blend-multiply {

    background-blend-mode: multiply;
  }

  .bg-blend-overlay {

    background-blend-mode: overlay;
  }

  .bg-blend-soft-light {

    background-blend-mode: soft-light;
  }

  .shadow-2xs {

    --tw-shadow: 0 1px var(--tw-shadow-color, rgb(0 0 0 / 0.05));

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-lg {

    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-md {

    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-xs {

    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring {

    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-2 {

    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-green-500 {

    --tw-ring-color: var(--color-green-500);
  }

  .ring-green-600 {

    --tw-ring-color: var(--color-green-600);
  }

  .outline-hidden {

    --tw-outline-style: none;

    outline-style: none;

    @media (forced-colors: active) {

      outline: 2px solid transparent;

      outline-offset: 2px;
    }
  }

  .outline {

    outline-style: var(--tw-outline-style);

    outline-width: 1px;
  }

  .filter {

    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }

  .transition {

    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;

    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));

    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-all {

    transition-property: all;

    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));

    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-transform {

    transition-property: transform, translate, scale, rotate;

    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));

    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .duration-200 {

    --tw-duration: 200ms;

    transition-duration: 200ms;
  }

  .outline-none {

    --tw-outline-style: none;

    outline-style: none;
  }

  .select-none {

    -webkit-user-select: none;

    user-select: none;
  }

  .\[--cell-size\:--spacing\(8\)\] {

    --cell-size: calc(var(--spacing) * 8);
  }

  .running {

    animation-play-state: running;
  }

  .group-hover\:gap-x-4 {

    &:is(:where(.group):hover *) {

      @media (hover: hover) {

        column-gap: calc(var(--spacing) * 4);
      }
    }
  }

  .group-hover\:bg-green-600 {

    &:is(:where(.group):hover *) {

      @media (hover: hover) {

        background-color: var(--color-green-600);
      }
    }
  }

  .group-hover\:bg-teal-50 {

    &:is(:where(.group):hover *) {

      @media (hover: hover) {

        background-color: var(--color-teal-50);
      }
    }
  }

  .group-data-\[focused\=true\]\/day\:relative {

    &:is(:where(.group\/day)[data-focused="true"] *) {

      position: relative;
    }
  }

  .group-data-\[focused\=true\]\/day\:z-10 {

    &:is(:where(.group\/day)[data-focused="true"] *) {

      z-index: 10;
    }
  }

  .group-data-\[focused\=true\]\/day\:border-ring {

    &:is(:where(.group\/day)[data-focused="true"] *) {

      border-color: var(--ring);
    }
  }

  .group-data-\[focused\=true\]\/day\:ring-\[3px\] {

    &:is(:where(.group\/day)[data-focused="true"] *) {

      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);

      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .group-data-\[focused\=true\]\/day\:ring-ring\/50 {

    &:is(:where(.group\/day)[data-focused="true"] *) {

      --tw-ring-color: var(--ring);

      @supports (color: color-mix(in lab, red, red)) {

        --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
      }
    }
  }

  .last\:border-b-0 {

    &:last-child {

      border-bottom-style: var(--tw-border-style);

      border-bottom-width: 0px;
    }
  }

  .hover\:border-green-800 {

    &:hover {

      @media (hover: hover) {

        border-color: var(--color-green-800);
      }
    }
  }

  .hover\:bg-accent {

    &:hover {

      @media (hover: hover) {

        background-color: var(--accent);
      }
    }
  }

  .hover\:bg-destructive\/90 {

    &:hover {

      @media (hover: hover) {

        background-color: var(--destructive);

        @supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
        }
      }
    }
  }

  .hover\:bg-green-500 {

    &:hover {

      @media (hover: hover) {

        background-color: var(--color-green-500);
      }
    }
  }

  .hover\:bg-green-600 {

    &:hover {

      @media (hover: hover) {

        background-color: var(--color-green-600);
      }
    }
  }

  .hover\:bg-primary\/90 {

    &:hover {

      @media (hover: hover) {

        background-color: var(--primary);

        @supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, var(--primary) 90%, transparent);
        }
      }
    }
  }

  .hover\:bg-secondary\/80 {

    &:hover {

      @media (hover: hover) {

        background-color: var(--secondary);

        @supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
        }
      }
    }
  }

  .hover\:text-accent-foreground {

    &:hover {

      @media (hover: hover) {

        color: var(--accent-foreground);
      }
    }
  }

  .hover\:text-green-700 {

    &:hover {

      @media (hover: hover) {

        color: var(--color-green-700);
      }
    }
  }

  .hover\:text-sky-600 {

    &:hover {

      @media (hover: hover) {

        color: var(--color-sky-600);
      }
    }
  }

  .hover\:text-white {

    &:hover {

      @media (hover: hover) {

        color: var(--color-white);
      }
    }
  }

  .hover\:underline {

    &:hover {

      @media (hover: hover) {

        text-decoration-line: underline;
      }
    }
  }

  .hover\:underline-offset-2 {

    &:hover {

      @media (hover: hover) {

        text-underline-offset: 2px;
      }
    }
  }

  .hover\:ring-green-400 {

    &:hover {

      @media (hover: hover) {

        --tw-ring-color: var(--color-green-400);
      }
    }
  }

  .focus\:bg-accent {

    &:focus {

      background-color: var(--accent);
    }
  }

  .focus\:text-accent-foreground {

    &:focus {

      color: var(--accent-foreground);
    }
  }

  .focus-visible\:border-ring {

    &:focus-visible {

      border-color: var(--ring);
    }
  }

  .focus-visible\:ring-\[3px\] {

    &:focus-visible {

      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);

      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .focus-visible\:ring-destructive\/20 {

    &:focus-visible {

      --tw-ring-color: var(--destructive);

      @supports (color: color-mix(in lab, red, red)) {

        --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
      }
    }
  }

  .focus-visible\:ring-ring\/50 {

    &:focus-visible {

      --tw-ring-color: var(--ring);

      @supports (color: color-mix(in lab, red, red)) {

        --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
      }
    }
  }

  .active\:bg-green-700 {

    &:active {

      background-color: var(--color-green-700);
    }
  }

  .active\:bg-green-800 {

    &:active {

      background-color: var(--color-green-800);
    }
  }

  .active\:ring-green-600 {

    &:active {

      --tw-ring-color: var(--color-green-600);
    }
  }

  .disabled\:pointer-events-none {

    &:disabled {

      pointer-events: none;
    }
  }

  .disabled\:opacity-50 {

    &:disabled {

      opacity: 50%;
    }
  }

  .has-focus\:border-ring {

    &:has(*:focus) {

      border-color: var(--ring);
    }
  }

  .has-focus\:ring-\[3px\] {

    &:has(*:focus) {

      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);

      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .has-focus\:ring-ring\/50 {

    &:has(*:focus) {

      --tw-ring-color: var(--ring);

      @supports (color: color-mix(in lab, red, red)) {

        --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
      }
    }
  }

  .has-\[\>svg\]\:px-2\.5 {

    &:has(>svg) {

      padding-inline: calc(var(--spacing) * 2.5);
    }
  }

  .has-\[\>svg\]\:px-3 {

    &:has(>svg) {

      padding-inline: calc(var(--spacing) * 3);
    }
  }

  .has-\[\>svg\]\:px-4 {

    &:has(>svg) {

      padding-inline: calc(var(--spacing) * 4);
    }
  }

  .aria-disabled\:opacity-50 {

    &[aria-disabled="true"] {

      opacity: 50%;
    }
  }

  .aria-invalid\:border-destructive {

    &[aria-invalid="true"] {

      border-color: var(--destructive);
    }
  }

  .aria-invalid\:ring-destructive\/20 {

    &[aria-invalid="true"] {

      --tw-ring-color: var(--destructive);

      @supports (color: color-mix(in lab, red, red)) {

        --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
      }
    }
  }

  .aria-selected\:text-muted-foreground {

    &[aria-selected="true"] {

      color: var(--muted-foreground);
    }
  }

  .data-\[disabled\]\:pointer-events-none {

    &[data-disabled] {

      pointer-events: none;
    }
  }

  .data-\[disabled\]\:opacity-50 {

    &[data-disabled] {

      opacity: 50%;
    }
  }

  .data-\[inset\]\:pl-8 {

    &[data-inset] {

      padding-left: calc(var(--spacing) * 8);
    }
  }

  .data-\[range-end\=true\]\:rounded-md {

    &[data-range-end="true"] {

      border-radius: calc(var(--radius) - 2px);
    }
  }

  .data-\[range-end\=true\]\:rounded-r-md {

    &[data-range-end="true"] {

      border-top-right-radius: calc(var(--radius) - 2px);

      border-bottom-right-radius: calc(var(--radius) - 2px);
    }
  }

  .data-\[range-end\=true\]\:bg-primary {

    &[data-range-end="true"] {

      background-color: var(--primary);
    }
  }

  .data-\[range-end\=true\]\:text-primary-foreground {

    &[data-range-end="true"] {

      color: var(--primary-foreground);
    }
  }

  .data-\[range-middle\=true\]\:rounded-none {

    &[data-range-middle="true"] {

      border-radius: 0;
    }
  }

  .data-\[range-middle\=true\]\:bg-accent {

    &[data-range-middle="true"] {

      background-color: var(--accent);
    }
  }

  .data-\[range-middle\=true\]\:text-accent-foreground {

    &[data-range-middle="true"] {

      color: var(--accent-foreground);
    }
  }

  .data-\[range-start\=true\]\:rounded-md {

    &[data-range-start="true"] {

      border-radius: calc(var(--radius) - 2px);
    }
  }

  .data-\[range-start\=true\]\:rounded-l-md {

    &[data-range-start="true"] {

      border-top-left-radius: calc(var(--radius) - 2px);

      border-bottom-left-radius: calc(var(--radius) - 2px);
    }
  }

  .data-\[range-start\=true\]\:bg-primary {

    &[data-range-start="true"] {

      background-color: var(--primary);
    }
  }

  .data-\[range-start\=true\]\:text-primary-foreground {

    &[data-range-start="true"] {

      color: var(--primary-foreground);
    }
  }

  .data-\[selected-single\=true\]\:bg-primary {

    &[data-selected-single="true"] {

      background-color: var(--primary);
    }
  }

  .data-\[selected-single\=true\]\:text-primary-foreground {

    &[data-selected-single="true"] {

      color: var(--primary-foreground);
    }
  }

  .data-\[selected\=true\]\:rounded-none {

    &[data-selected="true"] {

      border-radius: 0;
    }
  }

  .data-\[side\=bottom\]\:slide-in-from-top-2 {

    &[data-side="bottom"] {

      --tw-enter-translate-y: calc(2*var(--spacing)*-1);
    }
  }

  .data-\[side\=left\]\:slide-in-from-right-2 {

    &[data-side="left"] {

      --tw-enter-translate-x: calc(2*var(--spacing));
    }
  }

  .data-\[side\=right\]\:slide-in-from-left-2 {

    &[data-side="right"] {

      --tw-enter-translate-x: calc(2*var(--spacing)*-1);
    }
  }

  .data-\[side\=top\]\:slide-in-from-bottom-2 {

    &[data-side="top"] {

      --tw-enter-translate-y: calc(2*var(--spacing));
    }
  }

  .data-\[state\=closed\]\:animate-accordion-up {

    &[data-state="closed"] {

      animation: accordion-up var(--tw-animation-duration,var(--tw-duration,.2s))ease-out;
    }
  }

  .data-\[state\=closed\]\:animate-out {

    &[data-state="closed"] {

      animation: exit var(--tw-animation-duration,var(--tw-duration,.15s))var(--tw-ease,ease)var(--tw-animation-delay,0s)var(--tw-animation-iteration-count,1)var(--tw-animation-direction,normal)var(--tw-animation-fill-mode,none);
    }
  }

  .data-\[state\=closed\]\:fade-out-0 {

    &[data-state="closed"] {

      --tw-exit-opacity: calc(0/100);

      --tw-exit-opacity: 0;
    }
  }

  .data-\[state\=closed\]\:zoom-out-95 {

    &[data-state="closed"] {

      --tw-exit-scale: calc(95*1%);

      --tw-exit-scale: .95;
    }
  }

  .data-\[state\=open\]\:animate-accordion-down {

    &[data-state="open"] {

      animation: accordion-down var(--tw-animation-duration,var(--tw-duration,.2s))ease-out;
    }
  }

  .data-\[state\=open\]\:animate-in {

    &[data-state="open"] {

      animation: enter var(--tw-animation-duration,var(--tw-duration,.15s))var(--tw-ease,ease)var(--tw-animation-delay,0s)var(--tw-animation-iteration-count,1)var(--tw-animation-direction,normal)var(--tw-animation-fill-mode,none);
    }
  }

  .data-\[state\=open\]\:bg-accent {

    &[data-state="open"] {

      background-color: var(--accent);
    }
  }

  .data-\[state\=open\]\:text-accent-foreground {

    &[data-state="open"] {

      color: var(--accent-foreground);
    }
  }

  .data-\[state\=open\]\:fade-in-0 {

    &[data-state="open"] {

      --tw-enter-opacity: calc(0/100);

      --tw-enter-opacity: 0;
    }
  }

  .data-\[state\=open\]\:zoom-in-95 {

    &[data-state="open"] {

      --tw-enter-scale: calc(95*1%);

      --tw-enter-scale: .95;
    }
  }

  .data-\[variant\=destructive\]\:text-destructive {

    &[data-variant="destructive"] {

      color: var(--destructive);
    }
  }

  .data-\[variant\=destructive\]\:focus\:bg-destructive\/10 {

    &[data-variant="destructive"] {

      &:focus {

        background-color: var(--destructive);

        @supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, var(--destructive) 10%, transparent);
        }
      }
    }
  }

  .data-\[variant\=destructive\]\:focus\:text-destructive {

    &[data-variant="destructive"] {

      &:focus {

        color: var(--destructive);
      }
    }
  }

  .md\:mt-0 {

    @media (width >= 48rem) {

      margin-top: calc(var(--spacing) * 0);
    }
  }

  .md\:mt-4 {

    @media (width >= 48rem) {

      margin-top: calc(var(--spacing) * 4);
    }
  }

  .md\:block {

    @media (width >= 48rem) {

      display: block;
    }
  }

  .md\:hidden {

    @media (width >= 48rem) {

      display: none;
    }
  }

  .md\:w-fit {

    @media (width >= 48rem) {

      width: fit-content;
    }
  }

  .md\:grid-cols-2 {

    @media (width >= 48rem) {

      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  .md\:flex-row {

    @media (width >= 48rem) {

      flex-direction: row;
    }
  }

  .md\:items-center {

    @media (width >= 48rem) {

      align-items: center;
    }
  }

  .md\:items-start {

    @media (width >= 48rem) {

      align-items: flex-start;
    }
  }

  .md\:justify-between {

    @media (width >= 48rem) {

      justify-content: space-between;
    }
  }

  .md\:gap-6 {

    @media (width >= 48rem) {

      gap: calc(var(--spacing) * 6);
    }
  }

  .md\:gap-8 {

    @media (width >= 48rem) {

      gap: calc(var(--spacing) * 8);
    }
  }

  .md\:gap-16 {

    @media (width >= 48rem) {

      gap: calc(var(--spacing) * 16);
    }
  }

  .md\:border-4 {

    @media (width >= 48rem) {

      border-style: var(--tw-border-style);

      border-width: 4px;
    }
  }

  .md\:bg-green-950 {

    @media (width >= 48rem) {

      background-color: var(--color-green-950);
    }
  }

  .md\:py-0 {

    @media (width >= 48rem) {

      padding-block: calc(var(--spacing) * 0);
    }
  }

  .md\:py-4 {

    @media (width >= 48rem) {

      padding-block: calc(var(--spacing) * 4);
    }
  }

  .md\:pt-0 {

    @media (width >= 48rem) {

      padding-top: calc(var(--spacing) * 0);
    }
  }

  .md\:pt-8 {

    @media (width >= 48rem) {

      padding-top: calc(var(--spacing) * 8);
    }
  }

  .md\:pt-24 {

    @media (width >= 48rem) {

      padding-top: calc(var(--spacing) * 24);
    }
  }

  .md\:pt-36 {

    @media (width >= 48rem) {

      padding-top: calc(var(--spacing) * 36);
    }
  }

  .md\:pb-24 {

    @media (width >= 48rem) {

      padding-bottom: calc(var(--spacing) * 24);
    }
  }

  .md\:text-left {

    @media (width >= 48rem) {

      text-align: left;
    }
  }

  .md\:text-2xl {

    @media (width >= 48rem) {

      font-size: var(--text-2xl);

      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }

  .md\:text-4xl {

    @media (width >= 48rem) {

      font-size: var(--text-4xl);

      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }

  .md\:text-xl {

    @media (width >= 48rem) {

      font-size: var(--text-xl);

      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }

  .lg\:mt-0 {

    @media (width >= 64rem) {

      margin-top: calc(var(--spacing) * 0);
    }
  }

  .lg\:mt-16 {

    @media (width >= 64rem) {

      margin-top: calc(var(--spacing) * 16);
    }
  }

  .lg\:mb-0 {

    @media (width >= 64rem) {

      margin-bottom: calc(var(--spacing) * 0);
    }
  }

  .lg\:block {

    @media (width >= 64rem) {

      display: block;
    }
  }

  .lg\:flex {

    @media (width >= 64rem) {

      display: flex;
    }
  }

  .lg\:h-\[480px\] {

    @media (width >= 64rem) {

      height: 480px;
    }
  }

  .lg\:h-\[640px\] {

    @media (width >= 64rem) {

      height: 640px;
    }
  }

  .lg\:h-\[720px\] {

    @media (width >= 64rem) {

      height: 720px;
    }
  }

  .lg\:min-h-\[85dvh\] {

    @media (width >= 64rem) {

      min-height: 85dvh;
    }
  }

  .lg\:max-w-1\/2 {

    @media (width >= 64rem) {

      max-width: calc(1/2 * 100%);
    }
  }

  .lg\:max-w-2xl {

    @media (width >= 64rem) {

      max-width: var(--container-2xl);
    }
  }

  .lg\:grid-cols-2 {

    @media (width >= 64rem) {

      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  .lg\:grid-cols-3 {

    @media (width >= 64rem) {

      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  .lg\:flex-row {

    @media (width >= 64rem) {

      flex-direction: row;
    }
  }

  .lg\:items-center {

    @media (width >= 64rem) {

      align-items: center;
    }
  }

  .lg\:justify-start {

    @media (width >= 64rem) {

      justify-content: flex-start;
    }
  }

  .lg\:gap-x-2 {

    @media (width >= 64rem) {

      column-gap: calc(var(--spacing) * 2);
    }
  }

  .lg\:gap-x-12 {

    @media (width >= 64rem) {

      column-gap: calc(var(--spacing) * 12);
    }
  }

  .lg\:gap-x-16 {

    @media (width >= 64rem) {

      column-gap: calc(var(--spacing) * 16);
    }
  }

  .lg\:space-x-2 {

    @media (width >= 64rem) {

      :where(& > :not(:last-child)) {

        --tw-space-x-reverse: 0;

        margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));

        margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
      }
    }
  }

  .lg\:gap-y-8 {

    @media (width >= 64rem) {

      row-gap: calc(var(--spacing) * 8);
    }
  }

  .lg\:bg-zinc-50 {

    @media (width >= 64rem) {

      background-color: var(--color-zinc-50);
    }
  }

  .lg\:bg-top {

    @media (width >= 64rem) {

      background-position: top;
    }
  }

  .lg\:px-6 {

    @media (width >= 64rem) {

      padding-inline: calc(var(--spacing) * 6);
    }
  }

  .lg\:px-8 {

    @media (width >= 64rem) {

      padding-inline: calc(var(--spacing) * 8);
    }
  }

  .lg\:px-12 {

    @media (width >= 64rem) {

      padding-inline: calc(var(--spacing) * 12);
    }
  }

  .lg\:px-16 {

    @media (width >= 64rem) {

      padding-inline: calc(var(--spacing) * 16);
    }
  }

  .lg\:py-6 {

    @media (width >= 64rem) {

      padding-block: calc(var(--spacing) * 6);
    }
  }

  .lg\:py-8 {

    @media (width >= 64rem) {

      padding-block: calc(var(--spacing) * 8);
    }
  }

  .lg\:py-12 {

    @media (width >= 64rem) {

      padding-block: calc(var(--spacing) * 12);
    }
  }

  .lg\:py-36 {

    @media (width >= 64rem) {

      padding-block: calc(var(--spacing) * 36);
    }
  }

  .lg\:pt-0 {

    @media (width >= 64rem) {

      padding-top: calc(var(--spacing) * 0);
    }
  }

  .lg\:pt-24 {

    @media (width >= 64rem) {

      padding-top: calc(var(--spacing) * 24);
    }
  }

  .lg\:pl-0 {

    @media (width >= 64rem) {

      padding-left: calc(var(--spacing) * 0);
    }
  }

  .lg\:text-right {

    @media (width >= 64rem) {

      text-align: right;
    }
  }

  .lg\:text-2xl {

    @media (width >= 64rem) {

      font-size: var(--text-2xl);

      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }

  .lg\:text-4xl {

    @media (width >= 64rem) {

      font-size: var(--text-4xl);

      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }

  .xl\:block {

    @media (width >= 80rem) {

      display: block;
    }
  }

  .xl\:w-xl {

    @media (width >= 80rem) {

      width: var(--container-xl);
    }
  }

  .xl\:flex-row {

    @media (width >= 80rem) {

      flex-direction: row;
    }
  }

  .xl\:justify-between {

    @media (width >= 80rem) {

      justify-content: space-between;
    }
  }

  .dark\:border-input {

    &:is(.dark *) {

      border-color: var(--input);
    }
  }

  .dark\:bg-destructive\/60 {

    &:is(.dark *) {

      background-color: var(--destructive);

      @supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--destructive) 60%, transparent);
      }
    }
  }

  .dark\:bg-input\/30 {

    &:is(.dark *) {

      background-color: var(--input);

      @supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--input) 30%, transparent);
      }
    }
  }

  .dark\:hover\:bg-accent\/50 {

    &:is(.dark *) {

      &:hover {

        @media (hover: hover) {

          background-color: var(--accent);

          @supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, var(--accent) 50%, transparent);
          }
        }
      }
    }
  }

  .dark\:hover\:bg-input\/50 {

    &:is(.dark *) {

      &:hover {

        @media (hover: hover) {

          background-color: var(--input);

          @supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, var(--input) 50%, transparent);
          }
        }
      }
    }
  }

  .dark\:hover\:text-accent-foreground {

    &:is(.dark *) {

      &:hover {

        @media (hover: hover) {

          color: var(--accent-foreground);
        }
      }
    }
  }

  .dark\:focus-visible\:ring-destructive\/40 {

    &:is(.dark *) {

      &:focus-visible {

        --tw-ring-color: var(--destructive);

        @supports (color: color-mix(in lab, red, red)) {

          --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
        }
      }
    }
  }

  .dark\:aria-invalid\:ring-destructive\/40 {

    &:is(.dark *) {

      &[aria-invalid="true"] {

        --tw-ring-color: var(--destructive);

        @supports (color: color-mix(in lab, red, red)) {

          --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
        }
      }
    }
  }

  .dark\:data-\[variant\=destructive\]\:focus\:bg-destructive\/20 {

    &:is(.dark *) {

      &[data-variant="destructive"] {

        &:focus {

          background-color: var(--destructive);

          @supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, var(--destructive) 20%, transparent);
          }
        }
      }
    }
  }

  .\[\&_svg\]\:pointer-events-none {

    & svg {

      pointer-events: none;
    }
  }

  .\[\&_svg\]\:shrink-0 {

    & svg {

      flex-shrink: 0;
    }
  }

  .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 {

    & svg:not([class*='size-']) {

      width: calc(var(--spacing) * 4);

      height: calc(var(--spacing) * 4);
    }
  }

  .\[\&_svg\:not\(\[class\*\=\'text-\'\]\)\]\:text-muted-foreground {

    & svg:not([class*='text-']) {

      color: var(--muted-foreground);
    }
  }

  .\[\&\:first-child\[data-selected\=true\]_button\]\:rounded-l-md {

    &:first-child[data-selected=true] button {

      border-top-left-radius: calc(var(--radius) - 2px);

      border-bottom-left-radius: calc(var(--radius) - 2px);
    }
  }

  .rtl\:\*\*\:\[\.rdp-button\\_next\>svg\]\:rotate-180 {

    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {

      :is(& *) {

        &:is(.rdp-button_next>svg) {

          rotate: 180deg;
        }
      }
    }
  }

  .rtl\:\*\*\:\[\.rdp-button\\_previous\>svg\]\:rotate-180 {

    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {

      :is(& *) {

        &:is(.rdp-button_previous>svg) {

          rotate: 180deg;
        }
      }
    }
  }

  .data-\[variant\=destructive\]\:\*\:\[svg\]\:\!text-destructive {

    &[data-variant="destructive"] {

      :is(& > *) {

        &:is(svg) {

          color: var(--destructive) !important;
        }
      }
    }
  }

  .\[\&\:last-child\[data-selected\=true\]_button\]\:rounded-r-md {

    &:last-child[data-selected=true] button {

      border-top-right-radius: calc(var(--radius) - 2px);

      border-bottom-right-radius: calc(var(--radius) - 2px);
    }
  }

  .\[\&\>span\]\:text-xs {

    &>span {

      font-size: var(--text-xs);

      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }

  .\[\&\>span\]\:opacity-70 {

    &>span {

      opacity: 70%;
    }
  }

  .\[\&\>svg\]\:size-3\.5 {

    &>svg {

      width: calc(var(--spacing) * 3.5);

      height: calc(var(--spacing) * 3.5);
    }
  }

  .\[\&\>svg\]\:text-muted-foreground {

    &>svg {

      color: var(--muted-foreground);
    }
  }

  .\[\&\[data-state\=open\]\>svg\]\:rotate-180 {

    &[data-state=open]>svg {

      rotate: 180deg;
    }
  }

  .\[\[data-slot\=card-content\]_\&\]\:bg-transparent {

    [data-slot=card-content] & {

      background-color: transparent;
    }
  }

  .\[\[data-slot\=popover-content\]_\&\]\:bg-transparent {

    [data-slot=popover-content] & {

      background-color: transparent;
    }
  }
}

@property --tw-animation-delay {

  syntax: "*";

  inherits: false;

  initial-value: 0s;
}

@property --tw-animation-direction {

  syntax: "*";

  inherits: false;

  initial-value: normal;
}

@property --tw-animation-duration {

  syntax: "*";

  inherits: false;
}

@property --tw-animation-fill-mode {

  syntax: "*";

  inherits: false;

  initial-value: none;
}

@property --tw-animation-iteration-count {

  syntax: "*";

  inherits: false;

  initial-value: 1;
}

@property --tw-enter-opacity {

  syntax: "*";

  inherits: false;

  initial-value: 1;
}

@property --tw-enter-rotate {

  syntax: "*";

  inherits: false;

  initial-value: 0;
}

@property --tw-enter-scale {

  syntax: "*";

  inherits: false;

  initial-value: 1;
}

@property --tw-enter-translate-x {

  syntax: "*";

  inherits: false;

  initial-value: 0;
}

@property --tw-enter-translate-y {

  syntax: "*";

  inherits: false;

  initial-value: 0;
}

@property --tw-exit-opacity {

  syntax: "*";

  inherits: false;

  initial-value: 1;
}

@property --tw-exit-rotate {

  syntax: "*";

  inherits: false;

  initial-value: 0;
}

@property --tw-exit-scale {

  syntax: "*";

  inherits: false;

  initial-value: 1;
}

@property --tw-exit-translate-x {

  syntax: "*";

  inherits: false;

  initial-value: 0;
}

@property --tw-exit-translate-y {

  syntax: "*";

  inherits: false;

  initial-value: 0;
}

@font-face {

  font-family: "OpenDyslexic";

  src: url(/fonts/OpenDyslexic-Regular.woff2);
}

:root {

  --font-size-default: 16px;

  --font-size-large: 20px;

  --letter-spacing-default: normal;

  --letter-spacing-large: 3px;

  font-size: var(--font-size-default);

  letter-spacing: var(--letter-spacing-default);
}

body {

  font-family: var(--font-current);
}

.font-current-serif {

  font-family: var(--font-current-serif);
}

@layer utilities {

  .bg-noise {

    background-image: url("/noise.png");
  }

  .bg-paper {

    background-image: url("/paper.webp");
  }

  .sticking-nav {

    top: calc(var(--spacing) * 4);

    max-width: var(--container-4xl);

    padding-inline: calc(var(--spacing) * 6);

    padding-block: calc(var(--spacing) * 0);
  }

  .sticking-nav .nav-wrapper {

    border-radius: calc(infinity * 1px);

    background-color: var(--color-white);

    padding-inline: calc(var(--spacing) * 4);

    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);

    @media (width >= 48rem) {

      padding-inline: calc(var(--spacing) * 8);
    }
  }

  .sticking-nav .mobile-nav-wrapper {

    padding-right: calc(var(--spacing) * 6);

    padding-left: calc(var(--spacing) * 4);
  }

  .mobile-nav-wrapper {

    padding-inline: calc(var(--spacing) * 0);

    padding-left: calc(var(--spacing) * 4);
  }

  .no-scroll {

    overflow: hidden;
  }
}

:root {

  --radius: 0.625rem;

  --background: rgb(255, 255, 255);

  --foreground: rgb(10, 10, 10);

  --card: rgb(255, 255, 255);

  --card-foreground: rgb(10, 10, 10);

  --popover: rgb(255, 255, 255);

  --popover-foreground: rgb(10, 10, 10);

  --primary: rgb(23, 23, 23);

  --primary-foreground: rgb(250, 250, 250);

  --secondary: rgb(245, 245, 245);

  --secondary-foreground: rgb(23, 23, 23);

  --muted: rgb(245, 245, 245);

  --muted-foreground: rgb(115, 115, 115);

  --accent: rgb(245, 245, 245);

  --accent-foreground: rgb(23, 23, 23);

  --destructive: rgb(228, 0, 22);

  --border: rgb(229, 229, 229);

  --input: rgb(229, 229, 229);

  --ring: rgb(161, 161, 161);

  --chart-1: rgb(236, 86, 0);

  --chart-2: rgb(0, 148, 136);

  --chart-3: rgb(16, 78, 100);

  --chart-4: rgb(250, 188, 0);

  --chart-5: rgb(246, 158, 0);

  --sidebar: rgb(250, 250, 250);

  --sidebar-foreground: rgb(10, 10, 10);

  --sidebar-primary: rgb(23, 23, 23);

  --sidebar-primary-foreground: rgb(250, 250, 250);

  --sidebar-accent: rgb(245, 245, 245);

  --sidebar-accent-foreground: rgb(23, 23, 23);

  --sidebar-border: rgb(229, 229, 229);

  --sidebar-ring: rgb(161, 161, 161);
}

@supports (color: oklab(0% 0 0%)) {
:root {

    --background: oklch(1 0 0);

    --foreground: oklch(0.145 0 0);

    --card: oklch(1 0 0);

    --card-foreground: oklch(0.145 0 0);

    --popover: oklch(1 0 0);

    --popover-foreground: oklch(0.145 0 0);

    --primary: oklch(0.205 0 0);

    --primary-foreground: oklch(0.985 0 0);

    --secondary: oklch(0.97 0 0);

    --secondary-foreground: oklch(0.205 0 0);

    --muted: oklch(0.97 0 0);

    --muted-foreground: oklch(0.556 0 0);

    --accent: oklch(0.97 0 0);

    --accent-foreground: oklch(0.205 0 0);
  }
}

@supports (color: color(display-p3 0 0 0%)) {
:root {

    --destructive: color(display-p3 0.83032 0.14038 0.1332);
  }
}

@supports (color: oklab(0% 0 0%)) {
:root {

    --destructive: oklch(0.577 0.245 27.325);

    --border: oklch(0.922 0 0);

    --input: oklch(0.922 0 0);

    --ring: oklch(0.708 0 0);
  }
}

@supports (color: color(display-p3 0 0 0%)) {
:root {

    --chart-1: color(display-p3 0.88747 0.34166 0.022);
  }
}

@supports (color: oklab(0% 0 0%)) {
:root {

    --chart-1: oklch(0.646 0.222 41.116);
  }
}

@supports (color: color(display-p3 0 0 0%)) {
:root {

    --chart-2: color(display-p3 0.20711 0.57958 0.53668);
  }
}

@supports (color: oklab(0% 0 0%)) {
:root {

    --chart-2: oklch(0.6 0.118 184.704);

    --chart-3: oklch(0.398 0.07 227.392);
  }
}

@supports (color: color(display-p3 0 0 0%)) {
:root {

    --chart-4: color(display-p3 0.95919 0.73852 0.11827);
  }
}

@supports (color: oklab(0% 0 0%)) {
:root {

    --chart-4: oklch(0.828 0.189 84.429);
  }
}

@supports (color: color(display-p3 0 0 0%)) {
:root {

    --chart-5: color(display-p3 0.93994 0.62058 0.05854);
  }
}

@supports (color: oklab(0% 0 0%)) {
:root {

    --chart-5: oklch(0.769 0.188 70.08);

    --sidebar: oklch(0.985 0 0);

    --sidebar-foreground: oklch(0.145 0 0);

    --sidebar-primary: oklch(0.205 0 0);

    --sidebar-primary-foreground: oklch(0.985 0 0);

    --sidebar-accent: oklch(0.97 0 0);

    --sidebar-accent-foreground: oklch(0.205 0 0);

    --sidebar-border: oklch(0.922 0 0);

    --sidebar-ring: oklch(0.708 0 0);
  }
}

.dark {

  --background: rgb(10, 10, 10);

  --foreground: rgb(250, 250, 250);

  --card: rgb(23, 23, 23);

  --card-foreground: rgb(250, 250, 250);

  --popover: rgb(23, 23, 23);

  --popover-foreground: rgb(250, 250, 250);

  --primary: rgb(229, 229, 229);

  --primary-foreground: rgb(23, 23, 23);

  --secondary: rgb(38, 38, 38);

  --secondary-foreground: rgb(250, 250, 250);

  --muted: rgb(38, 38, 38);

  --muted-foreground: rgb(161, 161, 161);

  --accent: rgb(38, 38, 38);

  --accent-foreground: rgb(250, 250, 250);

  --destructive: rgb(255, 101, 104);

  --border: rgba(255, 255, 255, 0.1);

  --input: rgba(255, 255, 255, 0.15);

  --ring: rgb(115, 115, 115);

  --chart-1: rgb(20, 71, 230);

  --chart-2: rgb(0, 185, 129);

  --chart-3: rgb(246, 158, 0);

  --chart-4: rgb(171, 78, 255);

  --chart-5: rgb(255, 35, 87);

  --sidebar: rgb(23, 23, 23);

  --sidebar-foreground: rgb(250, 250, 250);

  --sidebar-primary: rgb(20, 71, 230);

  --sidebar-primary-foreground: rgb(250, 250, 250);

  --sidebar-accent: rgb(38, 38, 38);

  --sidebar-accent-foreground: rgb(250, 250, 250);

  --sidebar-border: rgba(255, 255, 255, 0.1);

  --sidebar-ring: rgb(115, 115, 115);
}

@supports (color: oklab(0% 0 0%)) {
.dark {

    --background: oklch(0.145 0 0);

    --foreground: oklch(0.985 0 0);

    --card: oklch(0.205 0 0);

    --card-foreground: oklch(0.985 0 0);

    --popover: oklch(0.205 0 0);

    --popover-foreground: oklch(0.985 0 0);

    --primary: oklch(0.922 0 0);

    --primary-foreground: oklch(0.205 0 0);

    --secondary: oklch(0.269 0 0);

    --secondary-foreground: oklch(0.985 0 0);

    --muted: oklch(0.269 0 0);

    --muted-foreground: oklch(0.708 0 0);

    --accent: oklch(0.269 0 0);

    --accent-foreground: oklch(0.985 0 0);
  }
}

@supports (color: color(display-p3 0 0 0%)) {
.dark {

    --destructive: color(display-p3 0.93353 0.43168 0.42349);
  }
}

@supports (color: oklab(0% 0 0%)) {
.dark {

    --destructive: oklch(0.704 0.191 22.216);

    --border: oklch(1 0 0 / 10%);

    --input: oklch(1 0 0 / 15%);

    --ring: oklch(0.556 0 0);

    --chart-1: oklch(0.488 0.243 264.376);
  }
}

@supports (color: color(display-p3 0 0 0%)) {
.dark {

    --chart-2: color(display-p3 0.26711 0.72685 0.5084);
  }
}

@supports (color: oklab(0% 0 0%)) {
.dark {

    --chart-2: oklch(0.696 0.17 162.48);
  }
}

@supports (color: color(display-p3 0 0 0%)) {
.dark {

    --chart-3: color(display-p3 0.93994 0.62058 0.05854);
  }
}

@supports (color: oklab(0% 0 0%)) {
.dark {

    --chart-3: oklch(0.769 0.188 70.08);
  }
}

@supports (color: color(display-p3 0 0 0%)) {
.dark {

    --chart-4: color(display-p3 0.62952 0.30089 0.99082);
  }
}

@supports (color: oklab(0% 0 0%)) {
.dark {

    --chart-4: oklch(0.627 0.265 303.9);
  }
}

@supports (color: color(display-p3 0 0 0%)) {
.dark {

    --chart-5: color(display-p3 0.92182 0.24075 0.35567);
  }
}

@supports (color: oklab(0% 0 0%)) {
.dark {

    --chart-5: oklch(0.645 0.246 16.439);

    --sidebar: oklch(0.205 0 0);

    --sidebar-foreground: oklch(0.985 0 0);

    --sidebar-primary: oklch(0.488 0.243 264.376);

    --sidebar-primary-foreground: oklch(0.985 0 0);

    --sidebar-accent: oklch(0.269 0 0);

    --sidebar-accent-foreground: oklch(0.985 0 0);

    --sidebar-border: oklch(1 0 0 / 10%);

    --sidebar-ring: oklch(0.556 0 0);
  }
}

@layer base {

  * {

    border-color: var(--border);

    outline-color: var(--ring);

    @supports (color: color-mix(in lab, red, red)) {

      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  body {

    background-color: var(--background);

    color: var(--foreground);
  }
}

@layer components {

  input[type="checkbox"]:checked,
  input[type="radio"]:checked {

    accent-color: var(--color-green-600);
  }

  ::marker {

    color: var(--color-green-900);
  }
}

@property --tw-translate-x {

  syntax: "*";

  inherits: false;

  initial-value: 0;
}

@property --tw-translate-y {

  syntax: "*";

  inherits: false;

  initial-value: 0;
}

@property --tw-translate-z {

  syntax: "*";

  inherits: false;

  initial-value: 0;
}

@property --tw-rotate-x {

  syntax: "*";

  inherits: false;
}

@property --tw-rotate-y {

  syntax: "*";

  inherits: false;
}

@property --tw-rotate-z {

  syntax: "*";

  inherits: false;
}

@property --tw-skew-x {

  syntax: "*";

  inherits: false;
}

@property --tw-skew-y {

  syntax: "*";

  inherits: false;
}

@property --tw-space-y-reverse {

  syntax: "*";

  inherits: false;

  initial-value: 0;
}

@property --tw-space-x-reverse {

  syntax: "*";

  inherits: false;

  initial-value: 0;
}

@property --tw-border-style {

  syntax: "*";

  inherits: false;

  initial-value: solid;
}

@property --tw-leading {

  syntax: "*";

  inherits: false;
}

@property --tw-font-weight {

  syntax: "*";

  inherits: false;
}

@property --tw-tracking {

  syntax: "*";

  inherits: false;
}

@property --tw-shadow {

  syntax: "*";

  inherits: false;

  initial-value: 0 0 #0000;
}

@property --tw-shadow-color {

  syntax: "*";

  inherits: false;
}

@property --tw-shadow-alpha {

  syntax: "<percentage>";

  inherits: false;

  initial-value: 100%;
}

@property --tw-inset-shadow {

  syntax: "*";

  inherits: false;

  initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {

  syntax: "*";

  inherits: false;
}

@property --tw-inset-shadow-alpha {

  syntax: "<percentage>";

  inherits: false;

  initial-value: 100%;
}

@property --tw-ring-color {

  syntax: "*";

  inherits: false;
}

@property --tw-ring-shadow {

  syntax: "*";

  inherits: false;

  initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {

  syntax: "*";

  inherits: false;
}

@property --tw-inset-ring-shadow {

  syntax: "*";

  inherits: false;

  initial-value: 0 0 #0000;
}

@property --tw-ring-inset {

  syntax: "*";

  inherits: false;
}

@property --tw-ring-offset-width {

  syntax: "<length>";

  inherits: false;

  initial-value: 0px;
}

@property --tw-ring-offset-color {

  syntax: "*";

  inherits: false;

  initial-value: #fff;
}

@property --tw-ring-offset-shadow {

  syntax: "*";

  inherits: false;

  initial-value: 0 0 #0000;
}

@property --tw-outline-style {

  syntax: "*";

  inherits: false;

  initial-value: solid;
}

@property --tw-blur {

  syntax: "*";

  inherits: false;
}

@property --tw-brightness {

  syntax: "*";

  inherits: false;
}

@property --tw-contrast {

  syntax: "*";

  inherits: false;
}

@property --tw-grayscale {

  syntax: "*";

  inherits: false;
}

@property --tw-hue-rotate {

  syntax: "*";

  inherits: false;
}

@property --tw-invert {

  syntax: "*";

  inherits: false;
}

@property --tw-opacity {

  syntax: "*";

  inherits: false;
}

@property --tw-saturate {

  syntax: "*";

  inherits: false;
}

@property --tw-sepia {

  syntax: "*";

  inherits: false;
}

@property --tw-drop-shadow {

  syntax: "*";

  inherits: false;
}

@property --tw-drop-shadow-color {

  syntax: "*";

  inherits: false;
}

@property --tw-drop-shadow-alpha {

  syntax: "<percentage>";

  inherits: false;

  initial-value: 100%;
}

@property --tw-drop-shadow-size {

  syntax: "*";

  inherits: false;
}

@property --tw-duration {

  syntax: "*";

  inherits: false;
}

@keyframes enter {

  from {

    opacity: var(--tw-enter-opacity,1);

    transform: translate3d(var(--tw-enter-translate-x,0),var(--tw-enter-translate-y,0),0)scale3d(var(--tw-enter-scale,1),var(--tw-enter-scale,1),var(--tw-enter-scale,1))rotate(var(--tw-enter-rotate,0));
  }
}

@keyframes exit {

  to {

    opacity: var(--tw-exit-opacity,1);

    transform: translate3d(var(--tw-exit-translate-x,0),var(--tw-exit-translate-y,0),0)scale3d(var(--tw-exit-scale,1),var(--tw-exit-scale,1),var(--tw-exit-scale,1))rotate(var(--tw-exit-rotate,0));
  }
}

@keyframes accordion-down {

  from {

    height: 0;
  }

  to {

    height: var(--radix-accordion-content-height,var(--bits-accordion-content-height,var(--reka-accordion-content-height,var(--kb-accordion-content-height,auto))));
  }
}

@keyframes accordion-up {

  from {

    height: var(--radix-accordion-content-height,var(--bits-accordion-content-height,var(--reka-accordion-content-height,var(--kb-accordion-content-height,auto))));
  }

  to {

    height: 0;
  }
}

@layer properties {

  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {

    *, ::before, ::after, ::backdrop {

      --tw-translate-x: 0;

      --tw-translate-y: 0;

      --tw-translate-z: 0;

      --tw-rotate-x: initial;

      --tw-rotate-y: initial;

      --tw-rotate-z: initial;

      --tw-skew-x: initial;

      --tw-skew-y: initial;

      --tw-space-y-reverse: 0;

      --tw-space-x-reverse: 0;

      --tw-border-style: solid;

      --tw-leading: initial;

      --tw-font-weight: initial;

      --tw-tracking: initial;

      --tw-shadow: 0 0 #0000;

      --tw-shadow-color: initial;

      --tw-shadow-alpha: 100%;

      --tw-inset-shadow: 0 0 #0000;

      --tw-inset-shadow-color: initial;

      --tw-inset-shadow-alpha: 100%;

      --tw-ring-color: initial;

      --tw-ring-shadow: 0 0 #0000;

      --tw-inset-ring-color: initial;

      --tw-inset-ring-shadow: 0 0 #0000;

      --tw-ring-inset: initial;

      --tw-ring-offset-width: 0px;

      --tw-ring-offset-color: #fff;

      --tw-ring-offset-shadow: 0 0 #0000;

      --tw-outline-style: solid;

      --tw-blur: initial;

      --tw-brightness: initial;

      --tw-contrast: initial;

      --tw-grayscale: initial;

      --tw-hue-rotate: initial;

      --tw-invert: initial;

      --tw-opacity: initial;

      --tw-saturate: initial;

      --tw-sepia: initial;

      --tw-drop-shadow: initial;

      --tw-drop-shadow-color: initial;

      --tw-drop-shadow-alpha: 100%;

      --tw-drop-shadow-size: initial;

      --tw-duration: initial;

      --tw-animation-delay: 0s;

      --tw-animation-direction: normal;

      --tw-animation-duration: initial;

      --tw-animation-fill-mode: none;

      --tw-animation-iteration-count: 1;

      --tw-enter-opacity: 1;

      --tw-enter-rotate: 0;

      --tw-enter-scale: 1;

      --tw-enter-translate-x: 0;

      --tw-enter-translate-y: 0;

      --tw-exit-opacity: 1;

      --tw-exit-rotate: 0;

      --tw-exit-scale: 1;

      --tw-exit-translate-x: 0;

      --tw-exit-translate-y: 0;
    }
  }
}

